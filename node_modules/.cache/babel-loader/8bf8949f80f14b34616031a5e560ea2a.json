{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/CustomHooks/04-onwards-to-a-more-realistic-example/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport useHTTP from \"./Hooks/UseHTTP\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const {\n    isLoading,\n    error,\n    SendRequest: fetchTasks\n  } = useHTTP();\n  useEffect(() => {\n    const transformTasks = data => {\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks({\n      url: \"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\"\n    }, transformTasks);\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fwnalKHe7IBaHrEgOTiUNR9CmbY=\", false, function () {\n  return [useHTTP];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/CustomHooks/04-onwards-to-a-more-realistic-example/src/App.js"],"names":["React","useEffect","useState","useHTTP","Tasks","NewTask","App","tasks","setTasks","isLoading","error","SendRequest","fetchTasks","transformTasks","data","loadedTasks","taskKey","push","id","text","url","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAgDT,OAAO,EAA7D;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,cAAc,GAAIC,IAAD,IAAU;AAC/B,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBF,IAAtB,EAA4B;AAC1BC,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,UAAAA,EAAE,EAAEF,OAAN;AAAeG,UAAAA,IAAI,EAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcG;AAAnC,SAAjB;AACD;;AAEDX,MAAAA,QAAQ,CAACO,WAAD,CAAR;AACD,KARD;;AASAH,IAAAA,UAAU,CACR;AACEQ,MAAAA,GAAG,EAAE;AADP,KADQ,EAIRP,cAJQ,CAAV;AAMD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAMQ,cAAc,GAAIC,IAAD,IAAU;AAC/Bd,IAAAA,QAAQ,CAAEe,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEd,KADT;AAEE,MAAA,OAAO,EAAEE,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCQN,G;UAG+CH,O;;;KAH/CG,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useHTTP from \"./Hooks/UseHTTP\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const { isLoading, error, SendRequest: fetchTasks } = useHTTP();\n\n  useEffect(() => {\n    const transformTasks = (data) => {\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    };\n    fetchTasks(\n      {\n        url: \"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n      },\n      transformTasks\n    );\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
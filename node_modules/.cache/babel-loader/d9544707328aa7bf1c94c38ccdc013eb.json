{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/CustomHooks/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useHTTP from \"../../Hooks/UseHTTP\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHTTP();\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        text: taskText\n      }\n    }, applyData);\n\n    try {\n      const response = await fetch(\"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const applyData = data => {\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n        const createdTask = {\n          id: generatedId,\n          text: taskText\n        };\n        props.onAddTask(createdTask);\n      };\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"EpD+37g9bWbehqdsT7dHLP61eao=\", false, function () {\n  return [useHTTP];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/CustomHooks/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"names":["useState","useHTTP","Section","TaskForm","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","enterTaskHandler","taskText","url","method","headers","body","text","applyData","response","fetch","JSON","stringify","ok","Error","data","generatedId","name","createdTask","id","onAddTask","err","setError","message","setIsLoading"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDR,OAAO,EAAlE;;AAEA,QAAMS,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAC3CF,IAAAA,eAAe,CACb;AACEG,MAAAA,GAAG,EAAE,uFADP;AAEEC,MAAAA,MAAM,EAAE,MAFV;AAGEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHX;AAMEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAEL;AAAR;AANR,KADa,EASbM,SATa,CAAf;;AAYA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uFAD0B,EAE1B;AACEN,QAAAA,MAAM,EAAE,MADV;AAEEE,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;AAAEL,UAAAA,IAAI,EAAEL;AAAR,SAAf,CAFR;AAGEG,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAWA,UAAI,CAACI,QAAQ,CAACI,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMN,SAAS,GAAIO,IAAD,IAAU;AAC1B,cAAMC,WAAW,GAAGD,IAAI,CAACE,IAAzB,CAD0B,CACK;;AAC/B,cAAMC,WAAW,GAAG;AAAEC,UAAAA,EAAE,EAAEH,WAAN;AAAmBT,UAAAA,IAAI,EAAEL;AAAzB,SAApB;AAEAN,QAAAA,KAAK,CAACwB,SAAN,CAAgBF,WAAhB;AACD,OALD;AAMD,KAtBD,CAsBE,OAAOG,GAAP,EAAY;AACZC,MAAAA,QAAQ,CAACD,GAAG,CAACE,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAvCD;;AAyCA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEvB,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlDD;;GAAMH,O;UACuDH,O;;;KADvDG,O;AAoDN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport useHTTP from \"../../Hooks/UseHTTP\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHTTP();\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest(\n      {\n        url: \"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: { text: taskText },\n      },\n      applyData\n    );\n\n    try {\n      const response = await fetch(\n        \"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const applyData = (data) => {\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n        const createdTask = { id: generatedId, text: taskText };\n\n        props.onAddTask(createdTask);\n      };\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}
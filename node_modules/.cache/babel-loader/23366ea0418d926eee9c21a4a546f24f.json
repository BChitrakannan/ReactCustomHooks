{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/CustomHooks/04-onwards-to-a-more-realistic-example/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport useHTTP from \"./Hooks/UseHTTP\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const transformTasks = data => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({\n        id: taskKey,\n        text: data[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  const {\n    isLoading,\n    error,\n    SendRequest: fetchTasks\n  } = useHTTP({\n    url: \"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\"\n  }, transformTasks);\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DXk1+pL2x1uXl5rAgyLFcjQIMNA=\", false, function () {\n  return [useHTTP];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/CustomHooks/04-onwards-to-a-more-realistic-example/src/App.js"],"names":["React","useEffect","useState","useHTTP","Tasks","NewTask","App","tasks","setTasks","transformTasks","data","loadedTasks","taskKey","push","id","text","isLoading","error","SendRequest","fetchTasks","url","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,cAAc,GAAIC,IAAD,IAAU;AAC/B,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,IAAtB,EAA4B;AAC1BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcG;AAAnC,OAAjB;AACD;;AAEDP,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,GARD;;AAUA,QAAM;AACJK,IAAAA,SADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAAW,EAAEC;AAHT,MAIFhB,OAAO,CACT;AACEiB,IAAAA,GAAG,EAAE;AADP,GADS,EAITX,cAJS,CAJX;AAWAR,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAME,cAAc,GAAIC,IAAD,IAAU;AAC/Bd,IAAAA,QAAQ,CAAEe,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEd,KADT;AAEE,MAAA,OAAO,EAAES,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA3CQb,G;UAiBHH,O;;;KAjBGG,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useHTTP from \"./Hooks/UseHTTP\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const transformTasks = (data) => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  const {\n    isLoading,\n    error,\n    SendRequest: fetchTasks,\n  } = useHTTP(\n    {\n      url: \"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n    },\n    transformTasks\n  );\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}